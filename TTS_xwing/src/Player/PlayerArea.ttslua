local Transform = require("TTS_lib.Vector.Transform")

-- Define a class for PlayerArea
PlayerArea = {}
PlayerArea.__index = PlayerArea

-- Constructor for the PlayerArea class
function PlayerArea:new(player, layout)
    local self = setmetatable({}, PlayerArea)
    self.player = player
    self.layout = layout
    self:calculateHandZoneInfo()
    return self
end

-- Method to calculate the player's hand zone information
function PlayerArea:calculateHandZoneInfo()
    local handTransform = self.player.getHandTransform()
    local position = handTransform.position + handTransform.forward * self:getScalar(self.layout)
    self.transform = Transform:new(position, handTransform.forward)
end

-- Method to get the distance multiplier based on the layout
function PlayerArea:getScalar(layout)
    local multipliers = {
        Epic = 24,
        Standard = 18,
        HotAC = 15
    }
    return multipliers[layout] or 18 -- Default to Standard if layout not specified
end

function PlayerArea:translate(objects)
    self.transform:translate(objects)
end

return PlayerArea
